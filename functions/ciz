#!/usr/bin/env nu
# ciz - CItation ‚Üí Zotero/PDF
# Universal citation picker with PDF opening
# Part of nushell-knowledge-tools v2.0
export def main [] {
    print "üîç Loading citations..."
    let citations_file = $"($env.FORGE?)/ZET/citations.md"
    let library_file = $"($env.FORGE?)/ZET/library.bib"

    if not ($citations_file | path exists) {
        print $"‚ùå Citations file not found: ($citations_file)"
        return
    }

    if not ($library_file | path exists) {
        print $"‚ùå Library file not found: ($library_file)"
        return
    }

    # Load citations (same as fcit for consistency)
    let citations = (open $citations_file | lines | where $it != "" | where ($it | str starts-with "#") == false | where ($it | str trim) != "")
    if ($citations | is-empty) {
        print "‚ùå No citations found"
        return
    }

    # Select citation
    let selected = ($citations | str join "\n" | ^env TERM=xterm-256color TERMINFO="" TERMINFO_DIRS="" sk --preview 'echo {}' --bind 'up:up,down:down,ctrl-j:down,ctrl-k:up' --prompt "üìö Citation ‚Üí PDF: " | str trim)

    if not ($selected | is-empty) {
        # Extract clean key and Zotero key from format: "CleanKey [ZoteroKey] Title"
        let clean_key = ($selected | split row ' ' | first)
        let zotero_key = ($selected | parse --regex '\[([^\]]+)\]' | get -o 0.capture0? | default "")

        if ($zotero_key | is-empty) {
            print "‚ùå Could not extract Zotero key from citation"
            return
        }

        print $"üìÑ Selected: ($clean_key) ‚Üí ($zotero_key)"

        # Find PDF path in library.bib
        let entry_text = (rg -A 20 $"@\\w+\\{($zotero_key)," $library_file | str join ' ')
        let file_path = ($entry_text | parse --regex 'file\s*=\s*\{([^}]+)\}' | get -o 0.capture0? | default "")

        if not ($file_path | is-empty) and ($file_path | path exists) {
            print $"üìÇ Opening PDF: ($file_path)"
            # Use system open command to open in default PDF viewer
            if (sys host | get name) == "Darwin" {
                ^open $file_path
            } else {
                ^xdg-open $file_path
            }
        } else {
            print $"‚ö†Ô∏è  PDF file not found at: ($file_path)"
            print $"üîó Opening Zotero instead..."
            if (sys host | get name) == "Darwin" {
                ^open $"zotero://select/items/@($zotero_key)"
            } else {
                ^xdg-open $"zotero://select/items/@($zotero_key)"
            }
        }
    }
}

# USAGE:
# fcitz                   # Open citation picker and open PDF
#
# REQUIREMENTS:
# - sk (skim) fuzzy finder
# - citations.md file at $FORGE/ZET/citations.md
# - library.bib file at $FORGE/ZET/library.bib
# - Zotero installed (optional, for fallback)
#
# WORKFLOW:
# 1. Search for citation by title, author, or keywords
# 2. Select entry
# 3. PDF opens directly in system viewer (Preview on macOS)
# 4. Fallback to Zotero if PDF path not found
#
# Updated 2025-10-01:
# - Now uses citations.md (same as fcit) for consistency
# - Extracts Zotero key from [brackets] for PDF lookup
# - Opens PDFs directly instead of dumping binary data
# - Cross-platform support (macOS + Linux)
