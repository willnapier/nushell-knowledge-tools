#!/usr/bin/env nu
# fsme - Forge SeMantic search ‚Üí Editor
# AI-powered concept discovery with editor opening
# Part of nushell-knowledge-tools v2.0

def main [] {
    if ($env.OPENAI_API_KEY? | is-empty) {
        print "‚ùå OPENAI_API_KEY not set for semantic search"
        print "üí° Set with: $env.OPENAI_API_KEY = 'your-api-key'"
        return
    }

    print "üß† Semantic search in your knowledge base..."
    let query = (input "üîç Search concept: ")
    if ($query | is-empty) {
        return
    }

    print $"üîç Finding notes related to: ($query)"
    let results = try {
        ^semantic-query --text $query --limit 20 2>/dev/null | lines | where $it != ""
    } catch {
        print "‚ùå Semantic search failed. Check if semantic-indexer is set up."
        print "üí° Run: semantic-status to check system configuration"
        return
    }

    if ($results | is-empty) {
        print "‚ùå No semantic matches found"
        return
    }

    let selected = ($results | str join "\n" | ^env TERM=xterm-256color TERMINFO="" TERMINFO_DIRS="" sk --preview 'bat --color=always {}' --preview-window 'right:60%' --bind 'up:up,down:down,ctrl-j:down,ctrl-k:up' --prompt "üß† Semantic: " | str trim)
    if not ($selected | is-empty) {
        # Use $env.EDITOR with graceful fallback
        let editor = if (not ($env.EDITOR? | is-empty)) {
            $env.EDITOR
        } else {
            "vi"
        }

        print $"üöÄ Opening ($selected | path basename) in ($editor)..."
        ^$editor $selected
    }
}
